; pycoh configuration file
; 
; id:

[pipeline]
tag = 
logdir = filelogs
cachedir = cache
outdir = results
scratchdir = /usr1/eric.coughlin/

[condor]
logdir = /usr1/eric.coughlin/
datafind = /archive/home/eric.coughlin/LAL/master/bin/ligo_data_find
formpsdcsd-bin = /archive/home/eric.coughlin/pycoh/bin/formPSDCSD
harvest-bin = /archive/home/eric.coughlin/pycoh/bin/harvest
plow-bin = /archive/home/eric.coughlin/pycoh/bin/plow
identify_outliers-bin = /home/eric.coughlin/opt_pycoh/bin/identify_outliers
accounting_group = ligo.prod.o1.detchar.syswide_coh.coherence

[segments]
; symmetrically contract each analyzable segment by this many seconds
padding-seconds = 0
minimum-analysis-length = 1024
analyzable-segments = segs.txt

; require segment file to specify over what epoch(s) to sum
; give a comma-separated list to produce coherences on multiple epochs
integration-windows = 
integrate-all = True
integrate-daily = False
integrate-weekly = False
integrate-monthly = False

daily-dir = daily_segfiles
weekly-dir = weekly_segfiles
monthly-dir = monthly_segfiles


[channels]
; RDS_C* frames will have the IFO prepended properly in software
frametype1 = R
frametype2 = R
chanlist1 = 
chanlist2 =

[output]
inverse-freq-resolution = 1024
output-format = .pickle.gz

[datafind]
; frame type is filled in from [channels] section
url-type = file

[data-conditioning]
resample-rate = 2048
window-length-seconds = 1024
window-type = hann
overlap-half = True

;
; blindly pass through static arguments to formPSDCSD, harvest, and plow jobs
;

[formPSDCSD]

[harvest]

[plow]

[identify_outliers]
